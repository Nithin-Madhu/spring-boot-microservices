spring.application.name=order-service

server.port=8082
server.shutdown=graceful
management.endpoints.web.exposure.include=*


# DB config #

spring.datasource.url=${DB_URL:jdbc:postgresql://order-db:5432/postgres}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}

spring.flyway.url=jdbc:postgresql://order-db:5432/postgres
spring.flyway.user=postgres
spring.flyway.password=postgres
spring.flyway.baseline-on-migrate=true

# order service cofig #

orders.catalog-service-url=http://catalog-service:8081
orders.order-events-exchange = orders-exchange
orders.new-orders-queue = new-orders
orders.delivered-orders-queue = delivered-orders
orders.cancelled-orders-queue = cancelled-orders
orders.error-orders-queue = error-orders

######## RabbitMQ Configuration  #########

spring.rabbitmq.host=bookstore-rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
-Dspring.amqp.deserialization.trust.all=true



## Resilience4j Configuration
resilience4j.retry.backends.catalog-service.max-attempts=2
resilience4j.retry.backends.catalog-service.wait-duration=1s

resilience4j.circuitbreaker.backends.catalog-service.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.backends.catalog-service.sliding-window-size=6
resilience4j.circuitbreaker.backends.catalog-service.minimum-number-of-calls=4
resilience4j.circuitbreaker.backends.catalog-service.wait-duration-in-open-state=20s
resilience4j.circuitbreaker.backends.catalog-service.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.backends.catalog-service.failure-rate-threshold=50
